# This is the CI/CD pipeline for the Quantum MLOps Project
# It automates testing, validation, and artifact storage.

name: Quantum MLOps CI/CD Pipeline

# --- TRIGGERS ---
# This workflow runs on:
# 1. Pushes to any branch
# 2. Pull Requests to any branch
# 3. Manual triggers from the GitHub Actions tab
on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  # --- JOB 1: Continuous Integration (Fast Checks) ---
  lint-and-test:
    name: Lint and Unit Test
    runs-on: ubuntu-latest # Use a standard Linux runner

    steps:
      - name: 1. Check out code
        uses: actions/checkout@v4

      - name: 2. Set up Python environment
        uses: actions/setup-python@v5
        with:
          python-version: '3.11' # Specify a Python version

      - name: 3. Install dependencies
        run: |
          pip install -r requirements.txt
          pip install qiskit-optimization # Install the extra dependency
          pip install flake8 # Install the linter

      - name: 4. Lint with flake8
        run: |
          # Stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # Exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: 5. Run Unit Tests
        run: |
          python -m unittest discover tests

  # --- JOB 2: Continuous Delivery (Full Pipeline Validation) ---
  run-full-pipeline:
    name: Run Full Pipeline & Save Artifacts
    needs: lint-and-test # This job will only start if the 'lint-and-test' job succeeds
    runs-on: ubuntu-latest

    # This job will only run on pushes to the 'main' branch OR manual triggers
    if: (github.event_name == 'push' && github.ref == 'refs/heads/main') || (github.event_name == 'workflow_dispatch')

    steps:
      - name: 1. Check out code
        uses: actions/checkout@v4

      - name: 2. Set up Python environment
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: 3. Install dependencies
        run: |
          pip install -r requirements.txt
          pip install qiskit-optimization

      - name: 4. Run the end-to-end MLOps pipeline
        run: |
          python run_pipeline.py

      - name: 5. Archive results
        uses: actions/upload-artifact@v4
        with:
          name: pipeline-results
          path: |
            saved_models/
            visualization_stage_1_feature_space.png
            visualization_stage_2_hpo_search.png
            visualization_stage_3_drift_boundary.png
            visualization_stage_3_confusion_matrix.png