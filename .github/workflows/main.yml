name: Quantum MLOps CI/CD and Validation Pipeline

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  # --- JOB 1: Lint and Unit Test (remains unchanged) ---
  lint-and-test:
    name: Lint and Unit Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.11' }
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install qiskit-optimization flake8
      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Run Unit Tests
        run: python -m unittest discover tests

  # --- JOB 2: Full Pipeline Validation & Automated Retraining Trigger ---
  run-full-pipeline-and-monitor:
    name: Run Full Pipeline & Trigger Retraining on Drift
    needs: lint-and-test
    runs-on: ubuntu-latest
    if: (github.event_name == 'push' && github.ref == 'refs/heads/main') || (github.event_name == 'workflow_dispatch')

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.11' }
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install qiskit-optimization

      - name: Run the end-to-end MLOps pipeline
        run: python run_pipeline.py

      - name: Archive initial pipeline results
        uses: actions/upload-artifact@v4
        with:
          name: initial-pipeline-results
          path: |
            saved_models/
            mlruns/
            visualization*.png
            drift_status.txt

      # Step to check for data drift and trigger retraining
      - name: Check for data drift and trigger retraining if needed
        id: check_drift
        run: |
          # Read the status file created by our Python monitoring script
          STATUS=$(cat drift_status.txt)
          if [ "$STATUS" == "DRIFT_DETECTED" ]; then
            echo "Drift detected. Triggering the automated retraining workflow."
            # Make a secure API call to start the 'retrain.yml' workflow
            # This uses the built-in GITHUB_TOKEN for authentication.
            curl -L \
              -X POST \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              https://api.github.com/repos/${{ github.repository }}/actions/workflows/retrain.yml/dispatches \
              -d '{"ref":"main"}'
          else
            echo "No significant drift detected. No retraining needed."
          fi